#!/usr/bin/env bash
#
# SPDX-License-Identifier: AGPL-3.0

_bin="$( \
  dirname \
    "$( \
      command \
        -v \
	  "env")")"
_lib="${_bin}/../lib"
_share="${_bin}/../share"
source \
  "${_lib}/libcrash-bash/crash-bash"

_root_requirements() {
  _check_cmd \
    "displayctl" \
    "displayctl"
  _check_cmd \
    "display-status" \
    "android-display-utils"
  _check_cmd \
    "sdotool" \
    "sdotool"
  _check_cmd \
    "su" \
    "tsu"
}

# shellcheck disable=SC2034
_global_variables() {
  lock_date=""
  lock_mode=""
  color=""
  quiet=""
}

_root_lock() {
  local \
    _displayctl_opts=() \
    _status
  if [[ "${quiet}" != "y" ]]; then
    _displayctl_opts=(
      -v
    )
  fi
  _status="$( \
    display-status)"
  if [[ "${_status}" == "on" ]]; then
    displayctl \
      "${_displayctl_opts[@]}" \
      set \
        status \
        "off"
  fi || \
    true
}

_lockscreen_lock() {
  local \
    _mode="${1}"
  "_${_mode}_lock"
}

_auto_detect_mode() {
  local \
    _os
  _os="$( \
    uname \
      -o)"
  if [[ "${_os}" == "Android" ]]; then
    _root_requirements
    echo \
      "root"
  elif [[ "${_os}" == "GNU/Linux" ]]; then
    _msg_info \
      "hijess"
  fi
}

_set_overrides() {
  _set_override \
    "lock" \
    "date" \
    "$(_get_date_human)"
  _set_override \
    "lock" \
    "mode" \
    "$(_auto_detect_mode)"
  if [[ -v override_color ]]; then
    color="${override_color}"
  elif [[ -z "${color}" ]]; then
    color="n"
  fi
  if [[ -v override_quiet ]]; then
    quiet="${override_quiet}"
  elif [[ -z "${quiet}" ]]; then
    quiet="y"
  fi
}

# Shows configuration options.
_show_config() {
  _msg_info "${app_name} configuration"
  _msg_info "     Display lock at date:   $(_get "lock" "date")"
  _msg_info "                Lock mode:   $(_get "lock" "mode")"
}

# Show help usage, with an exit status.
# $1: exit status number.
_usage() {
  local \
    _usage_text
  IFS='' \
    read \
      -r \
      -d '' \
      _usage_text << \
        ENDUSAGETEXT || true

Lock Android lockscreen

Usage:
  $(_get "app" "name")
    [options]
  options:
     -m <method>          Method to lock the screen.
                          Default: $(_get "lock" "mode")
     -h                   This message.
     -v                   Enable verbose output
ENDUSAGETEXT
  _printf \
    '%s\n' \
    "${_usage_text}"
  exit \
    "${1}"
}

_globals
_global_variables
# shellcheck disable=SC2004
# shellcheck disable=SC2034
while \
  getopts \
    'm:a:cvh?' \
    arg; do
  case \
    "${arg}" in
    m) override_lock_mode="${OPTARG}" ;;
    c) override_color="y" ;;
    v) override_quiet="n" ;;
    h|?) _set_overrides && \
	 _usage \
           0 ;;
    *)
    _msg_error \
      "Invalid argument '${arg}'" \
      0 && \
    _set_overrides && \
    _usage \
      1
    ;;
  esac
done
shift \
  $(( \
    OPTIND - 1 \
  ))
_set_overrides
app_opts=(
  "$(_get \
       "lock" \
       "mode")"
)
_show_config
_lockscreen_lock \
  "${app_opts[@]}"

# vim:set sw=2 sts=-1 et:
